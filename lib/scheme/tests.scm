; unit test

(assert-equal '(caar '((1 2) 3 4)) 1)
(assert-equal '(cadr '((1 2) 3 4)) 3)
(assert-equal '(cdar '((1 2) 3 4)) '(2))
(assert-equal '(cddr '((1 2) 3 4)) '(4))

(assert-equal '(caaar '(((1 2) 3 4) (5 6) 7)) 1)
(assert-equal '(caadr '(((1 2) 3 4) (5 6) 7)) 5)
(assert-equal '(cadar '(((1 2) 3 4) (5 6) 7)) 3)
(assert-equal '(caddr '(((1 2) 3 4) (5 6) 7)) 7)
(assert-equal '(cdaar '(((1 2) 3 4) (5 6) 7)) '(2))
(assert-equal '(cdadr '(((1 2) 3 4) (5 6) 7)) '(6))
(assert-equal '(cddar '(((1 2) 3 4) (5 6) 7)) '(4))
(assert-equal '(cdddr '(((1 2) 3 4) (5 6) 7)) '())

(assert-equal '(first '(1 2 3 4 5 6 7 8 9 10)) 1)
(assert-equal '(second '(1 2 3 4 5 6 7 8 9 10)) 2)
(assert-equal '(third '(1 2 3 4 5 6 7 8 9 10)) 3)
(assert-equal '(fourth '(1 2 3 4 5 6 7 8 9 10)) 4)
(assert-equal '(fifth '(1 2 3 4 5 6 7 8 9 10)) 5)
(assert-equal '(sixth '(1 2 3 4 5 6 7 8 9 10)) 6)
(assert-equal '(seventh '(1 2 3 4 5 6 7 8 9 10)) 7)
(assert-equal '(eighth '(1 2 3 4 5 6 7 8 9 10)) 8)
(assert-equal '(ninth '(1 2 3 4 5 6 7 8 9 10)) 9)
(assert-equal '(tenth '(1 2 3 4 5 6 7 8 9 10)) 10)

(assert-equal '(square 0) 0)
(assert-equal '(square 1) 1)
(assert-equal '(square -1) 1)
(assert-equal '(square 2) 4)
(assert-equal '(square -2) 4)

(assert-equal '(sqrt 0) 0)
(assert-equal '(sqrt 1) 1)
(assert-equal '(sqrt 2) 1.41421)
(assert-equal '(sqrt 3) 1.73205)
(assert-equal '(sqrt 4) 2)

(assert-equal '(cube 0) 0)
(assert-equal '(cube 1) 1)
(assert-equal '(cube -1) -1)
(assert-equal '(cube 2) 8)
(assert-equal '(cube -2) -8)

(assert-equal '(inc 0) 1)
(assert-equal '(inc 1) 2)
(assert-equal '(inc -1) 0)
(assert-equal '(inc 2) 3)
(assert-equal '(inc -2) -1)

(assert-equal '(identity 0) 0)
(assert-equal '(identity 1) 1)
(assert-equal '(identity -1) -1)
(assert-equal '(identity 2) 2)
(assert-equal '(identity -2) -2)

(assert-equal '(average 1 1) 1)
(assert-equal '(average 1 2) 1.5)
(assert-equal '(average -1 1) 0)
(assert-equal '(average 2.71 3.14) 2.925)
(assert-equal '(average 3.14 2.71) 2.925)

(assert-equal '(positive? 1) true)
(assert-equal '(positive? 0) false)
(assert-equal '(positive? -1) false)

(assert-equal '(negative? 1) false)
(assert-equal '(negative? 0) false)
(assert-equal '(negative? -1) true)

(assert-equal '(gcd 1 0) 1)
(assert-equal '(gcd 0 1) 1)
(assert-equal '(gcd 2 3) 1)
(assert-equal '(gcd 3 2) 1)
(assert-equal '(gcd 5 10) 5)
(assert-equal '(gcd 10 5) 5)
(assert-equal '(gcd 63 78) 3)
(assert-equal '(gcd 111 222) 111)
(assert-equal '(gcd 1234 4321) 1)

(assert-equal '(list-ref 0 '(1 2 3 4 5)) 1)
(assert-equal '(list-ref 4 '(1 2 3 4 5)) 5)
(assert-equal '(list-ref 5 '(1 2 3 4 5)) '())

(assert-equal '(map - '(1 2 3)) '(-1 -2 -3))
(assert-equal '(map car '((1 1) (2 2) (3 3))) '(1 2 3))
(assert-equal '(map cdr '((1 1) (2 2) (3 3))) '((1) (2) (3)))
(assert-equal '(map + '()) '())

; 1.2.4 Exponentiation

(define (expt1 b n)
    (if (= n 0)
        1
        (* b (expt1 b (- n 1)))))

(assert-equal '(expt1 1 0) 1)
(assert-equal '(expt1 1 1) 1)
(assert-equal '(expt1 2 0) 1)
(assert-equal '(expt1 2 1) 2)
(assert-equal '(expt1 2 2) 4)
(assert-equal '(expt1 3 0) 1)
(assert-equal '(expt1 3 1) 3)
(assert-equal '(expt1 3 2) 9)
(assert-equal '(expt1 3 3) 27)
(assert-equal '(expt1 4 0) 1)
(assert-equal '(expt1 4 1) 4)
(assert-equal '(expt1 4 2) 16)
(assert-equal '(expt1 4 3) 64)
(assert-equal '(expt1 4 4) 256)

(define (expt2 b n)
    (expt-iter b n 1))
(define (expt-iter b counter product)
    (if (= counter 0)
        product
        (expt-iter b
                   (- counter 1)
                   (* b product))))

(assert-equal '(expt2 1 0) 1)
(assert-equal '(expt2 1 1) 1)
(assert-equal '(expt2 2 0) 1)
(assert-equal '(expt2 2 1) 2)
(assert-equal '(expt2 2 2) 4)
(assert-equal '(expt2 3 0) 1)
(assert-equal '(expt2 3 1) 3)
(assert-equal '(expt2 3 2) 9)
(assert-equal '(expt2 3 3) 27)
(assert-equal '(expt2 4 0) 1)
(assert-equal '(expt2 4 1) 4)
(assert-equal '(expt2 4 2) 16)
(assert-equal '(expt2 4 3) 64)
(assert-equal '(expt2 4 4) 256)

(define (fast-expt b n)
    (cond ((= n 0) 1)
          ((even? n) (square (fast-expt b (/ n 2))))
          (else (* b (fast-expt b (- n 1))))))

(assert-equal '(fast-expt 1 0) 1)
(assert-equal '(fast-expt 1 1) 1)
(assert-equal '(fast-expt 2 0) 1)
(assert-equal '(fast-expt 2 1) 2)
(assert-equal '(fast-expt 2 2) 4)
(assert-equal '(fast-expt 3 0) 1)
(assert-equal '(fast-expt 3 1) 3)
(assert-equal '(fast-expt 3 2) 9)
(assert-equal '(fast-expt 3 3) 27)
(assert-equal '(fast-expt 4 0) 1)
(assert-equal '(fast-expt 4 1) 4)
(assert-equal '(fast-expt 4 2) 16)
(assert-equal '(fast-expt 4 3) 64)
(assert-equal '(fast-expt 4 4) 256)
